---
import Layout from './Layout.astro'
import RadioGroup from "../components/RadioGroup.svelte";

interface Props {
    choices: string[],
    valid: string,
    subject: string,
    index: number,
    max: number,
    next: string | null,
    id: string,
}

const { choices, valid, subject, index, max, next, id} = Astro.props;
---

<Layout title={subject}>
    <div class="root" data-id={id}>
        <div class="flex justify-between items-start text-start w-full small">
            <small class="text-xs">Frage {index} von {max}</small>
            <a class="text-xs" href="/">x</a>
        </div>
        <h1>{subject}</h1>
        <div class="text-xl description">
            <slot/>
        </div>
        {choices.map((choice) => (
                <p data-valid={choice === valid ? "true" : "false"} data-selected="false" data-content={choice}>
                    {choice}
                </p>
        ))}
        {
            next != null
                ? <a class="bg-white text-black rounded-lg text-xl border border-solid border-black" href=`/quiz/${next}`>NÃ¤chste Frage</a>
                : <p>fertig</p>
        }
    </div>
</Layout>

<style>
    p[data-valid="true"] {
        color: green;
    }

    p[data-valid="false"] {
        color: red;
    }

    p[data-selected="true"] {
        border: 4px solid white;
    }

    .root {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;

        gap: 0.45em;
    }

    .small {
        color: #656565;

        padding: 0.3em 0.5em;

        font-family: 'Space Grotesk Variable', sans-serif;
    }

    h1 {
        font-family: 'Teko Variable', sans-serif;
        font-size: 3rem;
        line-height: 0.7;

    }

    .description {
        font-family: 'Space Grotesk Variable', sans-serif;

        padding: 0 1em;
    }

    button {
        user-select: none;

        /*align-self: end;*/

        padding: 0.4rem 1.2rem 0.4rem 1.2rem;

        /*margin-right: 0.8em;*/

        font-family: 'Space Grotesk Variable', sans-serif;
    }

    button:active {
        transform: scale(0.95);
        background-color: #dadada;
    }
</style>

<script>
    let rootDiv = document.querySelector(".root") as HTMLDivElement;
    let selected: string = JSON.parse(localStorage.getItem(rootDiv.dataset.id as string) as string)["single_choice"];

    document.querySelector(`p[data-content="${selected}"]`)?.setAttribute("data-selected", "true");
</script>